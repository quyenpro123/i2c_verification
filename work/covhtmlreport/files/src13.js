var g_data = {"name":"../rtl/fifo_mem.v","src":"module fifo_mem # ( parameter DATASIZE = 8    , // Memory data width\n                    parameter ADDRSIZE = 4    ) // Address width\n(    \n    input	       [DATASIZE - 1 : 0]   wdata_i     , // DATA write to FIFO buffer\n    input	       [ADDRSIZE - 1 : 0]   waddr_i     , // Address of FIFO memory where data written\n    input	       [ADDRSIZE - 1 : 0]   raddr_i     , // Address of FIFO memory where data read\n    input	                            wclk_i      , // Clock of write domain\n    //input                               rst_ni      , // Reset signal is active LOW\n    input	                            wclken_i    , // Write clock enable\n    input	                            wfull_i     , // Write full , memory full can not write\n    output	      [DATASIZE - 1 : 0]    rdata_o       // DATA read from FIFO buffer   \n);\n\n    localparam  DEPTH   =   1 << ADDRSIZE                     ; // Size of buffer\n\n    reg     [DATASIZE - 1 : 0]      mem  [0 : DEPTH - 1]     ;  // Array with DEPTH  element\n    reg     [DATASIZE - 1 : 0]      rdata                    ;\n\n    assign      rdata_o     =       rdata                    ;\n    \n    // Read data from FIFO buffer\n	always	@ (*)\n	begin\n\n		rdata      =    mem[raddr_i]     ;\n\n	end\n    \n    //Write data to FIFO buffer\n    always @ (posedge wclk_i )\n    begin\n        \n            if (wclken_i && !wfull_i)\n                mem[waddr_i]    <=   wdata_i     ; \n\n    end\n    \nendmodule\n\n","lang":"verilog"};
processSrcData(g_data);